name: Setup Caches
description: 'Ensure various caches are setup like homebrew, vcpkg, ccache, etc'

inputs:
  vcpkg:
    type: boolean
    description: "cache vcpkg assets"
    default: true

runs:
  using: 'composite'
  steps:
    # Setup CCache
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2.12
      with:
        key: ccache-${{ runner.os }}-${{ runner.arch }}
        append-timestamp: false  # avoid excess caching

    - name: Setup ccache in shell
      shell: bash
      run: echo 'PATH=/usr/lib/ccache:/usr/local/opt/ccache/libexec:'"$PATH" >> $GITHUB_ENV
      if: ${{ runner.os != 'Windows' }}
      # TODO windows

    ################
    # vcpkg Cache
    - name: Setup vcpkg cache in shell (Linux)
      shell: bash
      run: |
        mkdir -p /home/runner/vcpkg_cache
        mkdir -p /home/runner/vcpkg_download_cache
        echo "VCPKG_DEFAULT_BINARY_CACHE=/home/runner/vcpkg_cache" >> $GITHUB_ENV
        echo "VCPKG_DOWNLOADS=/home/runner/vcpkg_download_cache" >> $GITHUB_ENV
      if: ${{ runner.os == 'Linux' && inputs.vcpkg == 'true' }}

    - name: Setup vcpkg cache (Linux)
      uses: actions/cache@v4
      with:
        path: |
          /home/runner/vcpkg_cache
          /home/runner/vcpkg_download_cache
        key: vcpkg-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('vcpkg.json') }}
        restore-keys: vcpkg-${{ runner.os }}-${{ runner.arch }}-
      if: ${{ runner.os == 'Linux' && inputs.vcpkg == 'true' }}

    - name: Setup vcpkg cache in shell (macOS)
      shell: bash
      run: |
        mkdir -p /Users/runner/vcpkg_cache
        mkdir -p /Users/runner/vcpkg_download_cache
        echo "VCPKG_DEFAULT_BINARY_CACHE=/Users/runner/vcpkg_cache" >> $GITHUB_ENV
        echo "VCPKG_DOWNLOADS=/Users/runner/vcpkg_download_cache" >> $GITHUB_ENV
      if: ${{ runner.os == 'macOS' && inputs.vcpkg == 'true' }}

    - name: Setup vcpkg cache (macOS)
      uses: actions/cache@v4
      with:
        path: |
          /Users/runner/vcpkg_cache
          /Users/runner/vcpkg_download_cache
        key: vcpkg-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('vcpkg.json') }}
        restore-keys: vcpkg-${{ runner.os }}-${{ runner.arch }}-
      if: ${{ runner.os == 'macOS' && inputs.vcpkg == 'true' }}

    - name: Setup vcpkg cache in shell (Windows)
      shell: bash
      run: |
        mkdir C:\\Users\\runneradmin\\AppData\\Local\\vcpkg_cache
        mkdir C:\\Users\\runneradmin\\AppData\\Local\\vcpkg_download_cache
        echo "VCPKG_DEFAULT_BINARY_CACHE=C:\\Users\\runneradmin\\AppData\\Local\\vcpkg_cache" >> $GITHUB_ENV
        echo "VCPKG_DOWNLOADS=C:\\Users\\runneradmin\\AppData\\Local\\vcpkg_download_cache" >> $GITHUB_ENV
      if: ${{ runner.os == 'Windows' && inputs.vcpkg == 'true' }}

    - name: Setup vcpkg cache (Windows)
      uses: actions/cache@v4
      with:
        path: |
          C:\\Users\\runneradmin\\AppData\\Local\\vcpkg_cache
          C:\\Users\\runneradmin\\AppData\\Local\\vcpkg_download_cache
        key: vcpkg-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('vcpkg.json') }}
        restore-keys: vcpkg-${{ runner.os }}-${{ runner.arch }}-
      if: ${{ runner.os == 'Windows' && inputs.vcpkg == 'true' }}
