[build-system]
requires = [
    "cmake",
    "oldest-supported-numpy",
    "pyarrow>=7.0.0",
    "ruamel.yaml",
    "scikit-build",
    "setuptools>=69",
]
build-backend="setuptools.build_meta"

[project]
name = "csp"
authors = [{name = "the csp authors", email = "CSPOpenSource@point72.com"}]
description="csp is a high performance reactive stream processing library, written in C++ and Python"
readme = "README.md"
version = "0.0.4"
requires-python = ">=3.8"

dependencies = [
    "backports.zoneinfo; python_version<'3.9'",
    "numpy",
    "packaging",
    "pandas",
    "psutil",
    "pyarrow>=7.0.0",
    "pytz",
    "ruamel.yaml",
    "sqlalchemy",
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]


[project.license]
file = "LICENSE"

[project.urls]
Repository = "https://github.com/point72/csp"
Homepage = "https://github.com/Point72/csp"
Documentation = "https://github.com/Point72/csp/wiki"
Tracker = "https://github.com/point72/csp/issues"

[project.optional-dependencies]
develop = [
    # build/dist
    "bump2version>=1.0.0",
    "build",
    "ruamel.yaml",
    "scikit-build",
    "twine",
    "wheel",
    # lint
    "codespell>=2.2.6,<2.3",
    "isort>=5,<6",
    "mdformat>=0.7.17,<0.8",
    "ruff>=0.3,<0.4",
    # test
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-sugar",
    # showgraph
    "graphviz",
    "pillow",
    # adapters
    "httpx>=0.20,<1",  # kafka
    "polars",  # parquet
    "psutil",  # test_engine/test_history
    "slack-sdk>=3",  # slack
    "sqlalchemy",  # db
    "requests",  # symphony
    "threadpoolctl",  # test_random
    "tornado",  # profiler, perspective, websocket
]
showgraph = [
    "graphviz",
    "pillow",
]
test = [
    "graphviz",
    "pillow",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-sugar",
    "httpx>=0.20,<1",
    "polars",
    "psutil",
    "requests",
    "slack-sdk>=3",
    "sqlalchemy",
    "threadpoolctl",
    "tornado",
]
symphony = [
    "requests",
]
slack = [
    "slack-sdk>=3",
]

[tool.check-manifest]
ignore = []

[tool.cibuildwheel]
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"
test-command = "echo 'TODO'"
test-requires = [
    "pytest",
    "pytest-cov",
    "pytest-sugar",
    "pytest-xdist",
]

[tool.cibuildwheel.linux]
before-all ="""
rpm --import https://repo.almalinux.org/almalinux/RPM-GPG-KEY-AlmaLinux &&
dnf config-manager --set-enabled powertools &&
dnf install epel-release -y &&
make dependencies-fedora
"""
environment = {CSP_MANYLINUX="ON"}
repair-wheel-command = "auditwheel -v show {wheel} && LD_LIBRARY_PATH=/project/csp/lib auditwheel -v repair -w {dest_dir} {wheel}"
skip = "*i686 musllinux*"
manylinux-x86_64-image = "manylinux_2_28"

[tool.cibuildwheel.macos]
before-all ="make dependencies-mac"
archs = "x86_64"  # NOTE: we use gcc and we cannot cross compile for now

[tool.cibuildwheel.windows]
before-all = "make dependencies-win"
before-build = "make requirements"

archs = "AMD64"
skip = "*win32 *arm_64"

[tool.isort]
combine_as_imports = true
include_trailing_comma = true
line_length = 120
profile = "black"

default_section = "THIRDPARTY"
sections = "FUTURE,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

known_first_party = "csp"

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = "csp/tests"

[tool.ruff]
line-length = 120

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"csp/impl/__*.py" = ["F401"]
"csp/tests/*.py" = ["F401", "F403", "F811", "F821", "F841", "F842", "E731", "E741"]
